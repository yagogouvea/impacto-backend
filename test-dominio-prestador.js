const axios = require('axios');
require('dotenv').config();

// URLs de teste
const API_BASE_URL = process.env.API_BASE_URL || 'http://localhost:3001';
const PRESTADOR_DOMAIN_URL = 'https://cadastroprestador.impactopr.seg.br';

async function testarDominioPrestador() {
  try {
    console.log('üß™ TESTE - Dom√≠nio cadastroprestador.impactopr.seg.br\n');

    // 1. Testar endpoint local com header de dom√≠nio
    console.log('1Ô∏è‚É£ Testando endpoint local com header de dom√≠nio...');
    try {
      const response = await axios.get(`${API_BASE_URL}/`, {
        headers: {
          'Host': 'cadastroprestador.impactopr.seg.br',
          'Origin': 'https://cadastroprestador.impactopr.seg.br'
        }
      });
      
      console.log('‚úÖ Resposta recebida do endpoint local!');
      console.log('   Status:', response.status);
      console.log('   Content-Type:', response.headers['content-type']);
      console.log('   Tamanho da resposta:', response.data.length, 'caracteres');
      
      if (response.data.includes('Cadastro de Prestadores')) {
        console.log('   ‚úÖ P√°gina de cadastro detectada!');
      } else {
        console.log('   ‚ö†Ô∏è  P√°gina de cadastro n√£o detectada');
      }
      
    } catch (error) {
      console.log('‚ùå Erro no teste local:', error.response?.data || error.message);
    }

    // 2. Testar endpoint de cadastro espec√≠fico
    console.log('\n2Ô∏è‚É£ Testando endpoint de cadastro espec√≠fico...');
    try {
      const response = await axios.get(`${API_BASE_URL}/cadastro-prestador-externo`, {
        headers: {
          'Host': 'cadastroprestador.impactopr.seg.br',
          'Origin': 'https://cadastroprestador.impactopr.seg.br'
        }
      });
      
      console.log('‚úÖ Endpoint espec√≠fico funcionando!');
      console.log('   Status:', response.status);
      console.log('   Content-Type:', response.headers['content-type']);
      
    } catch (error) {
      console.log('‚ùå Erro no endpoint espec√≠fico:', error.response?.data || error.message);
    }

    // 3. Testar CORS
    console.log('\n3Ô∏è‚É£ Testando configura√ß√£o CORS...');
    try {
      const response = await axios.options(`${API_BASE_URL}/api/v1/prestadores`, {
        headers: {
          'Origin': 'https://cadastroprestador.impactopr.seg.br',
          'Access-Control-Request-Method': 'POST',
          'Access-Control-Request-Headers': 'Content-Type'
        }
      });
      
      console.log('‚úÖ CORS funcionando!');
      console.log('   Status:', response.status);
      console.log('   Access-Control-Allow-Origin:', response.headers['access-control-allow-origin']);
      console.log('   Access-Control-Allow-Methods:', response.headers['access-control-allow-methods']);
      
    } catch (error) {
      console.log('‚ùå Erro no CORS:', error.response?.data || error.message);
    }

    // 4. Testar endpoint de cadastro p√∫blico
    console.log('\n4Ô∏è‚É£ Testando endpoint de cadastro p√∫blico...');
    try {
      const response = await axios.get(`${API_BASE_URL}/api/v1/prestadores-publico`, {
        headers: {
          'Origin': 'https://cadastroprestador.impactopr.seg.br'
        }
      });
      
      console.log('‚úÖ Endpoint de cadastro p√∫blico funcionando!');
      console.log('   Status:', response.status);
      
    } catch (error) {
      console.log('‚ùå Erro no endpoint p√∫blico:', error.response?.data || error.message);
    }

    console.log('\nüéâ TESTE DO DOM√çNIO PRESTADOR CONCLU√çDO!');
    console.log('\nüìä RESUMO DA IMPLEMENTA√á√ÉO:');
    console.log('   ‚úÖ Middleware de redirecionamento implementado');
    console.log('   ‚úÖ Rota espec√≠fica para dom√≠nio criada');
    console.log('   ‚úÖ P√°gina de cadastro personalizada');
    console.log('   ‚úÖ Configura√ß√£o CORS atualizada');
    console.log('   ‚úÖ Frontend com rota espec√≠fica');
    console.log('\nüîß PR√ìXIMOS PASSOS:');
    console.log('   1. Deploy do backend com middleware');
    console.log('   2. Deploy do frontend com nova rota');
    console.log('   3. Configurar DNS para cadastroprestador.impactopr.seg.br');
    console.log('   4. Testar em produ√ß√£o');
    console.log('\nüåê URLs para testar ap√≥s deploy:');
    console.log('   https://cadastroprestador.impactopr.seg.br/');
    console.log('   https://cadastroprestador.impactopr.seg.br/cadastro-prestador-externo');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data || error.message);
  }
}

testarDominioPrestador();
