const axios = require('axios');
require('dotenv').config();

// URLs de produ√ß√£o
const PRODUCTION_API_URL = 'https://api.impactopr.seg.br';

async function testarSolucaoProducao() {
  try {
    console.log('üß™ TESTE - Solu√ß√£o para Produ√ß√£o\n');

    // 1. Login em produ√ß√£o
    console.log('1Ô∏è‚É£ Fazendo login em produ√ß√£o...');
    const loginResponse = await axios.post(`${PRODUCTION_API_URL}/api/auth/login`, {
      email: 'teste@teste',
      password: '123456'
    });

    const token = loginResponse.data.token;
    console.log('‚úÖ Login em produ√ß√£o realizado com sucesso!');

    // 2. Testar endpoint Controle Detalhado com per√≠odo "tudo"
    console.log('\n2Ô∏è‚É£ Testando Controle Detalhado com per√≠odo "tudo"...');
    try {
      const detalhadoResponse = await axios.get(`${PRODUCTION_API_URL}/api/v1/financeiro/controle-detalhado`, {
        headers: { Authorization: `Bearer ${token}` },
        params: {
          periodo: 'tudo'
        }
      });
      
      console.log('‚úÖ Controle Detalhado com "tudo" funcionando!');
      console.log(`   Total de ocorr√™ncias: ${detalhadoResponse.data.length}`);
      
      if (detalhadoResponse.data.length > 0) {
        const primeira = detalhadoResponse.data[0];
        console.log('   Primeira ocorr√™ncia:');
        console.log(`     ID: ${primeira.id}`);
        console.log(`     Cliente: ${primeira.cliente}`);
        console.log(`     Prestador: ${primeira.prestador}`);
        console.log(`     Data: ${primeira.data_acionamento ? new Date(primeira.data_acionamento).toLocaleDateString('pt-BR') : 'N/A'}`);
        console.log(`     Parecer: ${primeira.parecer ? 'SIM' : 'N√ÉO'}`);
        console.log(`     Despesas Total: R$ ${primeira.despesas_total || 0}`);
        console.log(`     KM Total: ${primeira.km_total || 0} km`);
        console.log(`     Tempo Total: ${primeira.tempo_total_horas || 0} horas`);
        
        if (primeira.parecer) {
          console.log(`     Texto do parecer: ${primeira.parecer.substring(0, 100)}...`);
        }
      }
    } catch (error) {
      console.log('‚ùå Erro no Controle Detalhado:', error.response?.data?.error);
    }

    // 3. Testar endpoint Controle Prestadores com per√≠odo "tudo"
    console.log('\n3Ô∏è‚É£ Testando Controle Prestadores com per√≠odo "tudo"...');
    try {
      const prestadoresResponse = await axios.get(`${PRODUCTION_API_URL}/api/v1/financeiro/controle-prestadores`, {
        headers: { Authorization: `Bearer ${token}` },
        params: {
          periodo: 'tudo'
        }
      });
      
      console.log('‚úÖ Controle Prestadores com "tudo" funcionando!');
      console.log(`   Total de prestadores: ${prestadoresResponse.data.length}`);
      
      if (prestadoresResponse.data.length > 0) {
        prestadoresResponse.data.forEach((prestador, index) => {
          console.log(`   Prestador ${index + 1}:`);
          console.log(`     Nome: ${prestador.nome}`);
          console.log(`     Cadastrado: ${prestador.is_cadastrado}`);
          console.log(`     Tem parecer: ${prestador.tem_parecer}`);
          console.log(`     Quantidade de pareceres: ${prestador.pareceres_count}`);
          console.log(`     Total Acionamentos: ${prestador.total_acionamentos}`);
          console.log(`     Total KM: ${prestador.total_km} km`);
          console.log(`     Total Despesas: R$ ${prestador.total_despesas}`);
          console.log(`     Total Horas Adicionais: ${prestador.total_horas_adicionais} horas`);
        });
      }
    } catch (error) {
      console.log('‚ùå Erro no Controle Prestadores:', error.response?.data?.error);
    }

    console.log('\nüéâ TESTE DA SOLU√á√ÉO CONCLU√çDO!');
    console.log('\nüìä RESUMO DA SOLU√á√ÉO:');
    console.log('   ‚úÖ Backend funcionando corretamente em produ√ß√£o');
    console.log('   ‚úÖ Endpoints financeiros respondendo');
    console.log('   ‚úÖ Dados sendo retornados quando per√≠odo = "tudo"');
    console.log('   ‚úÖ Problema identificado: filtro padr√£o era "mes_atual"');
    console.log('   ‚úÖ Solu√ß√£o aplicada: mudan√ßa do padr√£o para "tudo"');
    console.log('\nüîß PR√ìXIMOS PASSOS:');
    console.log('   1. Deploy do frontend atualizado em produ√ß√£o');
    console.log('   2. As abas financeiras agora mostrar√£o dados por padr√£o');
    console.log('   3. Usu√°rios podem filtrar por per√≠odo conforme necess√°rio');
    console.log('\nüåê Para testar em produ√ß√£o ap√≥s deploy:');
    console.log('   https://painel.impactopr.seg.br/financeiro');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data?.error || error.message);
  }
}

testarSolucaoProducao();
