const axios = require('axios');

// Configura√ß√£o da API de produ√ß√£o
const API_BASE_URL = 'https://api.impactopr.seg.br';
const API_ENDPOINT = '/api/users';

// Token de teste (substitua por um token v√°lido)
const TEST_TOKEN = 'eyJhbGciOiJIUzI1NiIs...'; // Substitua pelo token real

async function testarPermissoesProducao() {
  console.log('üß™ Testando permiss√µes em produ√ß√£o...\n');

  try {
    // 1. Testar listagem de usu√°rios
    console.log('1Ô∏è‚É£ Testando listagem de usu√°rios...');
    const responseList = await axios.get(`${API_BASE_URL}${API_ENDPOINT}`, {
      headers: {
        'Authorization': `Bearer ${TEST_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ Listagem de usu√°rios:', responseList.status);
    console.log('üìä Total de usu√°rios:', responseList.data.length);
    
    if (responseList.data.length > 0) {
      const primeiroUsuario = responseList.data[0];
      console.log('üë§ Primeiro usu√°rio:', {
        id: primeiroUsuario.id,
        name: primeiroUsuario.name,
        email: primeiroUsuario.email,
        role: primeiroUsuario.role,
        permissions: primeiroUsuario.permissions
      });
    }

    // 2. Testar atualiza√ß√£o de usu√°rio
    if (responseList.data.length > 0) {
      const usuarioId = responseList.data[0].id;
      console.log(`\n2Ô∏è‚É£ Testando atualiza√ß√£o do usu√°rio ${usuarioId}...`);
      
      try {
        const responseUpdate = await axios.put(`${API_BASE_URL}${API_ENDPOINT}/${usuarioId}`, {
          name: 'Teste Update',
          email: 'teste@teste.com',
          role: 'usuario',
          permissions: ['access:dashboard', 'access:ocorrencias'],
          active: true
        }, {
          headers: {
            'Authorization': `Bearer ${TEST_TOKEN}`,
            'Content-Type': 'application/json'
          }
        });
        
        console.log('‚úÖ Atualiza√ß√£o de usu√°rio:', responseUpdate.status);
        console.log('üìÑ Resposta:', responseUpdate.data);
        
      } catch (error) {
        console.log('‚ùå Erro na atualiza√ß√£o:', error.response?.status, error.response?.statusText);
        console.log('üìÑ Detalhes do erro:', error.response?.data);
      }
    }

    // 3. Testar exclus√£o de usu√°rio
    if (responseList.data.length > 1) {
      const usuarioId = responseList.data[1].id;
      console.log(`\n3Ô∏è‚É£ Testando exclus√£o do usu√°rio ${usuarioId}...`);
      
      try {
        const responseDelete = await axios.delete(`${API_BASE_URL}${API_ENDPOINT}/${usuarioId}`, {
          headers: {
            'Authorization': `Bearer ${TEST_TOKEN}`,
            'Content-Type': 'application/json'
          }
        });
        
        console.log('‚úÖ Exclus√£o de usu√°rio:', responseDelete.status);
        console.log('üìÑ Resposta:', responseDelete.data);
        
      } catch (error) {
        console.log('‚ùå Erro na exclus√£o:', error.response?.status, error.response?.statusText);
        console.log('üìÑ Detalhes do erro:', error.response?.data);
      }
    }

    // 4. Testar endpoint de relat√≥rios
    console.log('\n4Ô∏è‚É£ Testando endpoint de relat√≥rios...');
    try {
      const responseRelatorios = await axios.get(`${API_BASE_URL}/api/relatorios`, {
        headers: {
          'Authorization': `Bearer ${TEST_TOKEN}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ Endpoint de relat√≥rios:', responseRelatorios.status);
      console.log('üìÑ Resposta:', responseRelatorios.data);
      
    } catch (error) {
      console.log('‚ùå Erro no endpoint de relat√≥rios:', error.response?.status, error.response?.statusText);
      console.log('üìÑ Detalhes do erro:', error.response?.data);
    }

  } catch (error) {
    console.error('‚ùå Erro geral:', error.response?.status, error.response?.statusText);
    console.error('üìÑ Detalhes do erro:', error.response?.data);
  }
}

// Executar o teste
if (require.main === module) {
  testarPermissoesProducao()
    .then(() => {
      console.log('\nüéØ Teste conclu√≠do');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erro no teste:', error);
      process.exit(1);
    });
}

module.exports = { testarPermissoesProducao };
